@model IndexViewModel
@{
    ViewData["Title"] = "Search";
}

<h3>Search</h3>

<p>Search for occurrences of a term in our database of @Model.StoryCount.ToString("N0") stories submitted to 
    <a href="https://news.ycombinator.com/" target="_blank">Hacker News</a> since 2007.</p>

<p>Stories are matched to the search term using the Title, the story content isn't indexed. This also excludes Ask HN posts.</p>

<form asp-controller="Home" asp-action="Trend" method="get">
    <label for="search" style="margin-top: 25px;">Enter a search term:</label>
    <input name="id" type="text" required id="search" />
    <button type="submit">Search</button>
    <label for="allwords" id="allwords-label" title="For a search containing multiple words the story must contain all words.">
        Search result must match all words: 
        <input type="checkbox" name="allwords" id="allwords" value="true" checked />
    </label>
</form>

<p>
    Not sure what to search? Why not try:
    <ul>
        <li><a asp-action="Trend" asp-route-id="Keras">Keras</a></li>
        <li><a asp-action="Trend" asp-route-id="Tensorflow">Tensorflow</a></li>
        <li><a asp-action="Trend" asp-route-id="Rust">Rust</a></li>
        <li><a asp-action="Trend" asp-route-id="OpenAI">OpenAI</a></li>
        <li><a asp-action="Trend" asp-route-id="PyTorch">PyTorch</a></li>
        <li><a asp-action="Trend" asp-route-id="Laravel">Laravel</a></li>
    </ul>
</p>

